// <auto-generated />
using System;
using MascotaEpets.app.Persistencia.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MascotaEpets.app.Persistencia.Migrations
{
    [DbContext(typeof(EfAppContext))]
    partial class EfAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MascotaEpets.app.Dominio.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEmpresa")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Direccion");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NIt");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NombreEmpresa");

                    b.HasKey("IdEmpresa");

                    b.ToTable("EmpresaDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.HistoriaMedica", b =>
                {
                    b.Property<int>("IdHistoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHistoria")
                        .UseIdentityColumn();

                    b.Property<int?>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int?>("IdRegistroMedico")
                        .HasColumnType("int");

                    b.Property<int?>("IddPropietarioMascota")
                        .HasColumnType("int");

                    b.HasKey("IdHistoria");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdRegistroMedico");

                    b.HasIndex("IddPropietarioMascota");

                    b.ToTable("HistoriaMedicaDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMascota")
                        .UseIdentityColumn();

                    b.Property<string>("ColorOjos")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ColorOjos");

                    b.Property<string>("ColorPiel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ColorPiel");

                    b.Property<int?>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("IdHistoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdSignos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdMascota");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdHistoria");

                    b.HasIndex("IdSignos");

                    b.ToTable("MascotaDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPersona")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Apellido");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("Cedula");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("Telefono");

                    b.HasKey("IdPersona");

                    b.ToTable("PersonaDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.RegistroMedico", b =>
                {
                    b.Property<int>("IdRegistroMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRegistroM")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaAtencion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaAtencion");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int");

                    b.Property<string>("Medicamentos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Medicamentos");

                    b.Property<string>("Recomendaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Recomendaciones");

                    b.HasKey("IdRegistroMedico");

                    b.HasIndex("IdMedico");

                    b.ToTable("RegistroMedicoDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.SignoVital", b =>
                {
                    b.Property<int>("IdSignos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSignos")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EstadoAnimo");

                    b.Property<double>("FrecuenciaCardiaca")
                        .HasColumnType("float")
                        .HasColumnName("FrecuenciaCardiaca");

                    b.Property<double>("FrecuenciaRespiratoria")
                        .HasColumnType("float")
                        .HasColumnName("FrecuenciaRespiratoria");

                    b.Property<double>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("Peso");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float")
                        .HasColumnName("Temperatura");

                    b.HasKey("IdSignos");

                    b.ToTable("SignoVitalesDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.SolicitudVisita", b =>
                {
                    b.Property<int>("idSolicitudVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSolicitud")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaSolicitud");

                    b.Property<int?>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("IdHistoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int?>("IdRegistroM")
                        .HasColumnType("int");

                    b.Property<string>("NombreMascota")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NombreMascota");

                    b.HasKey("idSolicitudVisita");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdHistoria");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPropietario");

                    b.HasIndex("IdRegistroM");

                    b.ToTable("SolicitudVisitaDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.TipoAnimal", b =>
                {
                    b.Property<int>("idAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAnimal")
                        .UseIdentityColumn();

                    b.Property<string>("claseAnimal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("claseAnimal");

                    b.HasKey("idAnimal");

                    b.ToTable("TipoAnimalDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.MedicoVeterinario", b =>
                {
                    b.HasBaseType("MascotaEpets.app.Dominio.Persona");

                    b.Property<string>("EspecializacionTipoAnimal")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Especializacion");

                    b.Property<int?>("IdAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdHistoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicoVeterinario")
                        .HasColumnType("int")
                        .HasColumnName("IdMedico");

                    b.Property<int?>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("TarjetaProfesional")
                        .HasColumnType("int")
                        .HasColumnName("TarjetaProfesional");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdHistoria");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("MedicoDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.PropietarioMascota", b =>
                {
                    b.HasBaseType("MascotaEpets.app.Dominio.Persona");

                    b.Property<int>("CantidadMascota")
                        .HasColumnType("int")
                        .HasColumnName("CantidadMascotas");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Email");

                    b.Property<int?>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietarioMascota")
                        .HasColumnType("int")
                        .HasColumnName("IdPropietarioMascota");

                    b.HasIndex("IdMascota");

                    b.ToTable("PropietariosDb");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.HistoriaMedica", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("IdMascota");

                    b.HasOne("MascotaEpets.app.Dominio.RegistroMedico", "RegistroMedico")
                        .WithMany()
                        .HasForeignKey("IdRegistroMedico");

                    b.HasOne("MascotaEpets.app.Dominio.PropietarioMascota", "PropietarioMascota")
                        .WithMany()
                        .HasForeignKey("IddPropietarioMascota");

                    b.Navigation("Mascota");

                    b.Navigation("PropietarioMascota");

                    b.Navigation("RegistroMedico");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.Mascota", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("IdAnimal");

                    b.HasOne("MascotaEpets.app.Dominio.HistoriaMedica", "HistoriaMedica")
                        .WithMany()
                        .HasForeignKey("IdHistoria");

                    b.HasOne("MascotaEpets.app.Dominio.SignoVital", "SignoVital")
                        .WithMany()
                        .HasForeignKey("IdSignos");

                    b.Navigation("HistoriaMedica");

                    b.Navigation("SignoVital");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.RegistroMedico", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.MedicoVeterinario", "MedicoVeterinario")
                        .WithMany()
                        .HasForeignKey("IdMedico");

                    b.Navigation("MedicoVeterinario");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.SolicitudVisita", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("IdAnimal");

                    b.HasOne("MascotaEpets.app.Dominio.HistoriaMedica", "HistoriaMedica")
                        .WithMany()
                        .HasForeignKey("IdHistoria");

                    b.HasOne("MascotaEpets.app.Dominio.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("IdMascota");

                    b.HasOne("MascotaEpets.app.Dominio.MedicoVeterinario", "MedicoVeterinario")
                        .WithMany()
                        .HasForeignKey("IdMedico");

                    b.HasOne("MascotaEpets.app.Dominio.PropietarioMascota", "PropietarioMascota")
                        .WithMany()
                        .HasForeignKey("IdPropietario");

                    b.HasOne("MascotaEpets.app.Dominio.RegistroMedico", "RegistroMedico")
                        .WithMany()
                        .HasForeignKey("IdRegistroM");

                    b.Navigation("HistoriaMedica");

                    b.Navigation("Mascota");

                    b.Navigation("MedicoVeterinario");

                    b.Navigation("PropietarioMascota");

                    b.Navigation("RegistroMedico");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.MedicoVeterinario", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("IdAnimal");

                    b.HasOne("MascotaEpets.app.Dominio.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("MascotaEpets.app.Dominio.HistoriaMedica", "HistoriaMedica")
                        .WithMany()
                        .HasForeignKey("IdHistoria");

                    b.HasOne("MascotaEpets.app.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("MascotaEpets.app.Dominio.MedicoVeterinario", "IdPersona")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MascotaEpets.app.Dominio.SolicitudVisita", "SolicitudVisita")
                        .WithMany()
                        .HasForeignKey("IdSolicitud");

                    b.Navigation("Empresa");

                    b.Navigation("HistoriaMedica");

                    b.Navigation("SolicitudVisita");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("MascotaEpets.app.Dominio.PropietarioMascota", b =>
                {
                    b.HasOne("MascotaEpets.app.Dominio.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("IdMascota");

                    b.HasOne("MascotaEpets.app.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("MascotaEpets.app.Dominio.PropietarioMascota", "IdPersona")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });
#pragma warning restore 612, 618
        }
    }
}
